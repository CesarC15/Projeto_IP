class projectile(object):
    def __init__(self, x, y, img, facing, range):
        self.x = x
        self.y = y
        self.img = img #colocar imagem e animação
        self.facing = facing
        self.range = range
        self.vel = 8

    #criar função de colocar o sprite e animar se necessário
        
#fora do while true do jogo:

enemy_projectiles = []

player_projectiles = []
        

#dentro do while true:
for projectile in player_projectiles:
    if True: #Colisão com inimigo
        enemy.kill() #chamar função de matar inimigo
        player_projectiles.pop(player_projectiles.index(projectile)) #tirar o projétil
    elif True: #Não está em colisão com a parede e o alcance é maior que 0
        if projectile.facing == "UP": #mover o projétil e reduzir o alcance enquanto ele se move
             projectile.y += projectile.vel
             projectile.range -= 1
        elif projectile.facing == "DOWN":
            projectile.y -= projectile.vel
            projectile.range -= 1
        elif projectile.facing == "RIGHT":
            projectile.x += projectile.vel
            projectile.range -= 1
        elif projectile.facing == "LEFT":
            projectile.x -= projectile.vel
            projectile.range -= 1
    else: #Está colidindo com parede
        player_projectiles.pop(player_projectiles.index(projectile))

for projectile in enemy_projectiles: #repetir a mesma coisa, porém para o inimigo
    if True: #Colisão com jogador
        gameover() #chamar função de perder o jogo
        enemy_projectiles.pop(enemy_projectiles.index(projectile)) #tirar o projétil
    elif True: #Não está em colisão com a parede e o alcance é maior que 0
        if projectile.facing == "UP": #mover o projétil e reduzir o alcance enquanto ele se move
             projectile.y += projectile.vel
             projectile.range -= 1
        elif projectile.facing == "DOWN":
            projectile.y -= projectile.vel
            projectile.range -= 1
        elif projectile.facing == "RIGHT":
            projectile.x += projectile.vel
            projectile.range -= 1
        elif projectile.facing == "LEFT":
            projectile.x -= projectile.vel
            projectile.range -= 1
    else: #Está colidindo com parede
        enemy_projectiles.pop(enemy_projectiles.index(projectile))

#quando for checar pelo input de atacar:
if True: #jogador aperta o botão de atacar
    if player_projectiles == []: #só atira um projétil por vez
        player_projectiles.append(round(player.x + player.width // 2), round(player.y + player.height // 2) , player.projectile_img, player.facing, player.projectile_range): #x e largura do jogador, y e altura do jogador, imagem do projétil do jogador(muda dependendo da classe), alcance do jogador(muda dependendo da classe)

#quando for desenhar a janela:
for projectile in player_projectiles:
    #adicionar função de usar o sprite com as animações

for projectile in enemy_projectiles:
    #adicionar função de usar o sprite com as animações
